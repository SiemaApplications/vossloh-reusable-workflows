name: MCUboot compilation

on:
  workflow_call:
    inputs:
      board-root-dir:
        description: 'Path to custom boards directory passed to --board-root option'
        required: false
        type: string
      key-file:
        description: 'Path where content of secret signing key is stored'
        required: true
        type: string
      twister-outdir:
        description: 'Twister output directory'
        required: false
        type: string
        default: "twister-out"
      tests-names:
        description: 'Space separated list of test case name to build'
        required: true
        type: string
      fallback-key-file:
        description: 'Key to use as fallback if signing-key is not available (action run from fork)'
        required: false
        type: string
      artifact-suffix:
        description: 'Suffix applied to artifact when this job is called multiple times with same tests-names but different inputs'
        required: false
        type: string
        default: ""
      token-app-id:
        description: 'Github application ID for an optional app to use to request an access token'
        type: string
        required: false
        default: ""

    secrets:
      signing-key:
        description: 'Content of PEM key for which public part is stored in MCUboot firmware'
        required: true
      token-app-private-key:
        description: 'Private key for an optional Github app to use to request an access token'
        required: false

    outputs:
      mcuboot-progfiles:
        description: 'Artifact name containing mcuboot programming files for each bank.'
        value: ${{ jobs.sreccat.outputs.artifact-name }}

      binaries:
        description: 'Artifact name containing binaires, retrieved from compilation job.'
        value:  ${{ jobs.mcuboot_compil.outputs.binaries }}

      logs:
        description: 'Artifact name containing the build logs, retrieved from compilation job.'
        value: ${{ jobs.mcuboot_compil.outputs.logs }}


jobs:
  mcuboot_compil:
    uses: SiemaApplications/vossloh-gh-actions/.github/workflows/twister-signed-compilation.yml@v6
    with:
      app-dir: bootloader/mcuboot/boot/zephyr/
      board-root-dir: ${{ inputs.board-root-dir }}
      key-file: ${{ inputs.key-file }}
      twister-outdir: ${{ inputs.twister-outdir }}
      tests-names: ${{ inputs.tests-names }}
      fallback-key-file: ${{ inputs.fallback-key-file }}
      token-app-id: ${{ inputs.token-app-id }}
    secrets:
      signing-key: ${{ secrets.signing-key }}
      token-app-private-key: ${{ secrets.token-app-private-key }}

  sreccat:
    runs-on: ubuntu-latest
    name: MCUboot files for stm32h7 banks
    needs:
      - mcuboot_compil
    env:
      ARTIFACT_INFIX: '-mcuboot-progfiles'
    outputs:
      artifact-name: ${{ steps.artifact-name.outputs.artifact_name }}

    steps:
      - name: install srec_cat
        run: sudo apt-get install -y srecord

      - name: Get MCUboot binaries
        uses: actions/download-artifact@v4
        id: download
        with:
          name: ${{ needs.mcuboot_compil.outputs.binaries }}

      - name: 'Show artifacts'
        run: |
          find .

      - name: Store MCUboot in Second Bank
        run: |
          twister_json="twister.json"
          builds="$(cat ${twister_json} | jq -r '.testsuites | .[] | select(.status == "passed") | select(length > 0) | {build_dir:(.platform + "/" + .name), board:.platform, name:.name} | @base64')"
          echo "## Store MCUboot in Second Bank" | tee -a ${GITHUB_STEP_SUMMARY}
          for b in ${builds}; do
            build_dir="$(echo ${b} | base64 --decode | jq -r '.build_dir')"
            board="$(echo ${b} | base64 --decode | jq -r '.board')"
            app="$(basename $(echo ${b} | base64 --decode | jq -r '.name'))"
            fw_prefix="${board}-${app}"
            binary="${build_dir}/zephyr/${fw_prefix}.bin"
            hex_file_2banks="${build_dir}/zephyr/${fw_prefix}_2banks.hex"
            echo "- ${board} - ${app}" | tee -a ${GITHUB_STEP_SUMMARY}
            srec_cat ${binary} -binary -offset 0x08000000 ${binary} -binary -offset 0x08100000 -Output ${hex_file_2banks} -Intel
          done

      - name: Artifact name
        id: artifact-name
        run: |
          artifact_name="stm32h7${ARTIFACT_INFIX}${{inputs.artifact-suffix}}"
          echo "artifact_name=${artifact_name}" | tee -a $GITHUB_OUTPUT

      - name: Show Produced Artifacts
        run: |
          find . -name "*.hex"
          find . -name "*.bin"
          find . -name "*.elf"

      - name: Upload MCUboot Binaries
        uses: actions/upload-artifact@v4
        with:
          # We don't care of the binaries after the run
          retention-days: 1
          name: ${{ steps.artifact-name.outputs.artifact_name }}
          path: |
            twister.json
            **/*.bin
            **/*.hex
            **/*.elf
